openapi: 3.0.1
info:
  title: Pizza4Life local endpoint API
  description: yep
  version: 0.0.4
servers:
  - url: https://127.0.0.1:4218
paths:
  /orders:
    get:
      summary: List all orders for the authenticated account
      tags:
        - Orders
      responses:
        '200':
          description: A list of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '401':
          description: Unauthorized access

    put:
      summary: Make a pizza order
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewOrder'
      responses:
        '201':
          description: Order successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Missing data
        '401':
          description: Unauthorized access

  /orders/{orderId}:
    get:
      summary: Get details of a specific order
      tags:
        - Orders
      parameters:
        - in: path
          name: orderId
          schema:
            type: integer
          required: true
          description: ID of the order to fetch
      responses:
        '200':
          description: Details of the specific order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Order not found
        '401':
          description: Unauthorized access

    put:
      summary: Update an existing order's status
      tags:
        - Orders
      parameters:
        - in: path
          name: orderId
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                statusId:
                  type: integer
      responses:
        '200':
          description: Order status updated successfully
        '404':
          description: Order not found
        '401':
          description: Unauthorized access

    delete:
      summary: Delete an order
      tags:
        - Orders
      parameters:
        - in: path
          name: orderId
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Order deleted
        '403':
          description: Order not in finished state
        '404':
          description: Order not found
        '401':
          description: Unauthorized access

  /ingredients:
    get:
      summary: Get a list of all available ingredients
      tags:
        - Ingredients
      responses:
        '200':
          description: A list of ingredients
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ingredient'
  /status/{orderId}:
    get:
      summary: Retrieve order's status
      tags:
        - Status
      parameters:
        - in: path
          name: orderId
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Order deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '404':
          description: Order not found
    put:
      summary: Update order's status
      tags:
        - Status
      parameters:
        - in: path
          name: orderId
          schema:
            type: integer
            format: int64
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
      responses:
        '200':
          description: Order updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '404':
          description: Order not found
  /health:
    get:
      summary: Get system health
      tags:
        - Stats
      responses:
        '200':
          description: Retrieved system health successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
components:
  schemas:
    Order:
      type: object
      properties:
        orderId:
          type: integer
          format: int64
        accountId:
          type: integer
          format: int64
        deviceId:
          type: integer
          format: int64
        statusId:
          type: integer
          format: int64
        totalAmount:
          type: number
          format: float
        orderDate:
          type: string
          format: date-time
        paymentStatus:
          type: string
          enum:
            - paid
            - unpaid
        readyStatus:
          type: string
          description: Current order status
          enum:
            - queued
            - cooking
            - ready
            - finished
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/Ingredient'
      required:
        - ingredients

    NewOrder:
      type: object
      properties:
        deviceId:
          type: integer
        ingredients:
          type: array
          description: For creation pass only ingredient id
          items:
            $ref: '#/components/schemas/Ingredient'

    Ingredient:
      type: object
      properties:
        ingredientId:
          type: integer
        name:
          type: string
        type:
          type: string
          enum:
            - liquid
            - meat
            - fish
            - fruitOrVeggie
            - seasoning
        unit:
          type: string
          enum:
            - piece
            - ml
            - mg
        quantity:
          type: number
        pricePerUnit:
          type: number
          format: float
        stockLevel:
          type: integer
        additives:
          type: array
          description: List of additives and allergens of this ingredient
          items:
            type: string
      required:
        - ingredientId
    Status:
      type: object
      properties:
        statusId:
          type: integer
          format: int64
        description:
          type: string
    SystemHealthInfo:
      type: object
      properties:
        uptime:
          type: integer
          format: int64
        ordersServed:
          type: integer
          format: int64
        moneyMade:
          type: number
