openapi: 3.0.3
info:
  version: v1
  title: Pizzaautomat - OpenAPI 3.0
  description: Pizzaautomat

paths:
  /order:
    put:
      tags:
        - order
      summary: Create an order
      description: Create a new order
      operationId: makeOrder
      requestBody:
        description: Make an order for pizza
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'          
            
        '400':
          description: Invalid ID supplied


  /order/ingedredients:
    get:
      tags:
        - ingredients
      summary: Select Ingredients by name
      description: Select Ingredients by name and amount
      operationId: selectIngredients
      parameters:
        - name: Ingredients
          in: query
          description: Names of the Ingredients
          required: false
          explode: true
          schema:
            type: string
            default: Salami
            enum:
              - Salami
              - Schinken
              - Käse
              - Pilze
              - etc
        - name: Amount
          in: query
          description: Amount of the Ingredients
          required: false
          explode: false
          schema:
            type: integer
            format: int64
            default: 1
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'  
        '400':
          description: Invalid status value

components:
  schemas:
    Order:
      type: object
      properties:
        OrderID:
          type: integer
          format: int64
          example: 198772
        ingredients:
          type: string
          description: Types and amount of Ingredients
          items:
            $ref: '#/components/schemas/Ingredients'
            
        status:
          type: string
          description: Order Status
          example: pending
          enum:
            - available
            - pending
            - payed
        complete:
          type: boolean
    Ingredients:
      type: object
      properties:
        IngredientTyp:
          type: string
          description: Typ of Ingredient
          example: Salami
          enum:
              - Salami
              - Schinken
              - Käse
              - Pilze
              - etc
        ingredientamount:
          type: integer
          format: int64
          example: 2